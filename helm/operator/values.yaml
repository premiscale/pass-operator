## @section Global Configuration

global:
  image:
    ## @param global.image.registry [string, default: docker.io] The global docker registry for all of the image.
    registry: docker.io

## @section Operator Deployment

deployment:
  ## @param deployment.pullSecrets [array] A list of pull secret names. These names are automatically mapped to key: secretname in the imagePullSecrets field.
  pullSecrets: []

  image:
    ## @param deployment.image.name [string, default: premiscale/pass-operator] The name of the image.
    name: premiscale/pass-operator
    ## @param deployment.image.tag [string, default: ignore] The tag of the image. The default is "ignore" to ensure users provide a tag.
    tag: ignore
    ## @param deployment.image.pullPolicy [string, default: Always] The pull policy of the image.
    pullPolicy: Always

  ## @param deployment.resources [object] Set resources for the pod.
  resources:
    requests:
      cpu: 0.25
      memory: 500Mi
    limits:
      cpu: 0.25
      memory: 500Mi

  ## @param deployment.livenessProbe [object] Configure the liveness probe for the pod. The defaults are set to check the /healthz endpoint on port 8080, which is provided by Kopf.
  livenessProbe:
    enabled: true
    port: 8080
    path: /healthz
    config:
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 3

  ## @param deployment.podSecurityContext [object] Configure the security context for the pod.
  podSecurityContext:
    ## @param deployment.podSecurityContext.runAsNonRoot [default: true] If true, the pod is required to run as a non-root user.
    runAsNonRoot: true

  ## @param deployment.containerSecurityContext [object] Configure the security context for the container.
  containerSecurityContext:
    # TODO for a future sprint.
    # readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false


## @section Operator Configuration

operator:
  ## @param operator.interval [default: 60] The interval in seconds to check for changes in the secrets in the pass store.
  interval: 60

  ## @param operator.initial_delay [default: 60] The initial delay in seconds before the first check for changes in the secrets in the pass store.
  initial_delay: 60

  ## @param operator.priority [default: 100] The priority of the operator. The higher the number, the higher the priority. Only useful if multiple operators are running.
  priority: 100

  pass:
    ## @param operator.pass.binary [string] The path to the pass binary.
    binary: /usr/bin/pass

    ## @param operator.pass.storeSubPath [string] A subpath within `~/.password-store`.
    storeSubPath: ''

  log:
    ## @param operator.log.level [string, default: debug] The log level for the operator. Options are: debug, info, warn, error.
    level: info

  ssh:
    ## @param operator.ssh.createSecret [default: false] If true, the secret is created. Otherwise, the secret is only referenced. This allows for users to provide their own secret via SealedSecrets or some other operator.
    createSecret: false

    ## @param operator.ssh.name [string, default: private-ssh-key] Name of the secret. If createSecret is false, this is used to reference an existing, user-provided secret.
    name: private-ssh-key

    ## @param operator.ssh.value [string, default: ""] The raw string of the private SSH key b64enc'd.
    value: ""

  gpg:
    ## @param operator.gpg.createSecret [default: false] If true, the secret is created. Otherwise, the secret is only referenced. This allows for users to provide their own secret via SealedSecrets or some other operator.
    createSecret: false

    ## @param operator.gpg.name [string, default: private-gpg-key] Name of the secret. If createSecret is false, this is used to reference an existing, user-provided secret.
    name: private-gpg-key

    ## @param operator.gpg.key_id [string, default: ""] The key ID of the (private) GPG key.
    key_id: ""

    ## @param operator.gpg.value [string, default: ""] The armored string of the private GPG key b64enc'd.
    value: ""

    ## @param operator.gpg.passphrase [string, default: ""] The passphrase for the GPG key, if there is one.
    passphrase: ""

    ## @param operator.gpg.threads [default: 20] Maximum number of threads to spawn for decryption. This can help significantly speed up decryption on secrets with many fields.
    threads: 20

  git:
    ## @param operator.git.branch [string, default: main] The branch of the Git repository to clone and pull from.
    branch: main

    ## @param operator.git.url [string, default: ""] The (SSH) URL of the Git repository. HTTPS is not supported at this time.
    url: ""

## @section Operator Service

service:
  ## @param service.create [default: false] If true, a service is created for the operator. This usually is not necessary as the operator is not listening on any ports except for a healthcheck.
  create: false

  # type: ClusterIP
  # ports:
  #   - appProtocol: http
  #     name: http
  #     port: 443
  #     targetPort: 443

## @section Operator Service Account

serviceAccount:
  ## @param serviceAccount.create [default: true] If true, a service account is created for the operator. This is necessary for RBAC.
  create: true

  ## @param serviceAccount.name [string, default: pass-operator] The name of the service account.
  name: pass-operator

## @section Operator RBAC

rbac:
  ## @param rbac.create [default: true] If true, RBAC resources are created for the operator.
  create: true